// Generated by view binder compiler. Do not edit!
package com.example.finalprodproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalprodproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CoursesItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView coursesItemAuthor;

  @NonNull
  public final TextView coursesItemGraduatesCount;

  @NonNull
  public final ConstraintLayout coursesItemMarksContainer;

  @NonNull
  public final TextView coursesItemPoints;

  @NonNull
  public final LinearLayout coursesItemPointsContainer;

  @NonNull
  public final TextView coursesItemStudentsCount;

  @NonNull
  public final TextView coursesItemTitle;

  private CoursesItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView coursesItemAuthor, @NonNull TextView coursesItemGraduatesCount,
      @NonNull ConstraintLayout coursesItemMarksContainer, @NonNull TextView coursesItemPoints,
      @NonNull LinearLayout coursesItemPointsContainer, @NonNull TextView coursesItemStudentsCount,
      @NonNull TextView coursesItemTitle) {
    this.rootView = rootView;
    this.coursesItemAuthor = coursesItemAuthor;
    this.coursesItemGraduatesCount = coursesItemGraduatesCount;
    this.coursesItemMarksContainer = coursesItemMarksContainer;
    this.coursesItemPoints = coursesItemPoints;
    this.coursesItemPointsContainer = coursesItemPointsContainer;
    this.coursesItemStudentsCount = coursesItemStudentsCount;
    this.coursesItemTitle = coursesItemTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CoursesItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CoursesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.courses_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CoursesItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.courses_item_author;
      TextView coursesItemAuthor = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemAuthor == null) {
        break missingId;
      }

      id = R.id.courses_item_graduates_count;
      TextView coursesItemGraduatesCount = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemGraduatesCount == null) {
        break missingId;
      }

      id = R.id.courses_item_marks_container;
      ConstraintLayout coursesItemMarksContainer = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemMarksContainer == null) {
        break missingId;
      }

      id = R.id.courses_item_points;
      TextView coursesItemPoints = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemPoints == null) {
        break missingId;
      }

      id = R.id.courses_item_points_container;
      LinearLayout coursesItemPointsContainer = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemPointsContainer == null) {
        break missingId;
      }

      id = R.id.courses_item_students_count;
      TextView coursesItemStudentsCount = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemStudentsCount == null) {
        break missingId;
      }

      id = R.id.courses_item_title;
      TextView coursesItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (coursesItemTitle == null) {
        break missingId;
      }

      return new CoursesItemBinding((ConstraintLayout) rootView, coursesItemAuthor,
          coursesItemGraduatesCount, coursesItemMarksContainer, coursesItemPoints,
          coursesItemPointsContainer, coursesItemStudentsCount, coursesItemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
